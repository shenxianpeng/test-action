name: test cpp-linter

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
#         clang-version: ['12']
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'
#       - name: Install clang-tools
#         run: |
#           pip install clang-tools
#           clang-tools -i ${{ matrix.clang-version }} -b
      
#       - name: output clang-tools
#         run: |
#           which clang-format-${{ matrix.clang-version }}
#           # whereis clang-format-${{ matrix.clang-version }}
#           which clang-tidy-${{ matrix.clang-version }}
#           # whereis clang-tidy-${{ matrix.clang-version }}

      - name: Run cpp-linter
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file
          lines-changed-only: true
          step-summary: true
          version: 14
          tidy-checks: >-
            boost-*
            ,bugprone-*
            ,performance-*
            ,readability-*
            ,portability-*
            ,modernize-*
            ,clang-analyzer-*
            ,cppcoreguidelines-*
            ,-cppcoreguidelines-avoid-magic-numbers
            ,-readability-magic-numbers
            
#           # to ignore all build folder contents
#           ignore: build
#           # database: build
#           verbosity: 9
#           version: ${{ matrix.clang-version }}
#           thread-comments: ${{ matrix.clang-version == '12' }}
#           file-annotations: ${{ matrix.clang-version == '12' }}
#           extra-args: -std=c++14 -Wall

      - name: Fail fast?!
#       if: steps.linter.outputs.checks-failed > 0
        run: echo "${{ steps.linter.outputs.checks-failed }}"
        # for actual deployment
        # run: exit 1
